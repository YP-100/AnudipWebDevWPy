# 1. Implement a generator function fibonacci_generator that yields Fibonacci
# numbers indefinitely. Write a function sum_fibonacci that computes the sum of
# the first 10 Fibonacci numbers generated by this function.


def fibonacci_generator():
    a, b = 0, 1
    while True:
        yield a # will yield a one by one and will add get a = a+b on the next turn 0,1,1,2,3,5
        a, b = b, a + b

fib_gen = fibonacci_generator()
fibo = sum(next(fib_gen) for _ in range(10)) # will add all a's yielded by yield
print("Sum of first 10 Fibonacci numbers:",fibo)  

# 2.Define a generator function prime_number_generator that yields prime
# numbers indefinitely. Print the first 15 prime numbers generated by this function.

def prime_number_generator():
    num = 2
    while True:
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                break
        else:
            yield num
        num += 1

prime_gen = prime_number_generator()

count = 0
for prime in prime_gen:
    print(prime, end=" ")  # Print each prime number
    count += 1
    if count == 15:  # Stop after printing 15 primes
        break
